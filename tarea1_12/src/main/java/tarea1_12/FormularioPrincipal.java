/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tarea1_12;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Sebastián Melgar Marín
 */
public class FormularioPrincipal extends javax.swing.JFrame {
    private TableRowSorter<DefaultTableModel> sorter;

    /**
     * Creates new form FormularioPrincipal
     */
    public FormularioPrincipal() {
        initComponents();
        cargarDatosDesdeBD();
        
        
    }
    
    private void cargarDatosDesdeBD() {
    DefaultTableModel model = (DefaultTableModel) jTablePrincipal.getModel();
    //Limpia la tabla antes de cargar datos
    model.setRowCount(0); 
    String basedatos = "encargos";
    String url = "jdbc:sqlite:" + basedatos + ".db";
    
    //Creamos la base de datos en caso de que no exista
    try (Connection connection = DriverManager.getConnection(url)) {
        //Esto crea la base de datos y define la estructura de la tabla en caso de que no existiese
        String crearTablaSQL = "CREATE TABLE IF NOT EXISTS registro ("
                + "codigo VARCHAR(5), "
                + "nombre VARCHAR(20), "
                + "apellidos VARCHAR(30), "
                + "telefono VARCHAR(9), "
                + "direccion VARCHAR(30), "
                + "fecha VARCHAR(10), "
                + "tipo VARCHAR(10), "
                + "servicios VARCHAR(70), "
                + "encargado VARCHAR(20), "
                + "coste VARCHAR(5), "
                + "nempleados VARCHAR(2))";
        
        try (Statement statement = connection.createStatement()) {
            statement.executeUpdate(crearTablaSQL);
        }    
		} catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al crear la base de datos", "Error", JOptionPane.ERROR_MESSAGE);
    }    
    
    
    
   //Esto carga los datos de la BD en la tabla:
    try (Connection connection = DriverManager.getConnection(url)) {
        String selectQuery = "SELECT * FROM registro";
        try (Statement statement = connection.createStatement();
             ResultSet resultSet = statement.executeQuery(selectQuery)) {
            while (resultSet.next()) {
                String[] rowData = new String[11];
                rowData[0] = resultSet.getString("codigo");
                rowData[1] = resultSet.getString("nombre");
                rowData[2] = resultSet.getString("apellidos");
                rowData[3] = resultSet.getString("direccion");
                rowData[4] = resultSet.getString("telefono");
                rowData[5] = resultSet.getString("fecha");
                rowData[6] = resultSet.getString("tipo");
                rowData[7] = resultSet.getString("servicios");
                rowData[8] = resultSet.getString("encargado");
                rowData[9] = resultSet.getString("coste");
                rowData[10] = resultSet.getString("nempleados");
                model.addRow(rowData);
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al cargar datos desde la base de datos", "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelIMG = new javax.swing.JLabel();
        jButtonNuevaRef = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePrincipal = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldFecha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCod = new javax.swing.JTextField();
        jButtonBorrar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuPrincipal = new javax.swing.JMenu();
        jMenuItemNuevaRef = new javax.swing.JMenuItem();
        jMenuItemSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabelIMG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Logo_Construccion_small.png"))); // NOI18N
        jLabelIMG.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jButtonNuevaRef.setText("Nueva Reforma");
        jButtonNuevaRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevaRefActionPerformed(evt);
            }
        });

        jTablePrincipal.setAutoCreateRowSorter(true);
        jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Apellidos", "Direccion", "Telefono", "Fecha", "Tipo", "Servicios", "Encargado", "€/Hora", "Nº Empleados"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePrincipal);

        jLabel1.setText("Busqueda por fecha:");

        jTextFieldFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFechaActionPerformed(evt);
            }
        });

        jLabel2.setText("Búsqueda por código:");

        jTextFieldCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodActionPerformed(evt);
            }
        });

        jButtonBorrar.setText("Borrar seleccionado");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        jMenuPrincipal.setText("Gestionar reformas");

        jMenuItemNuevaRef.setText("Nueva reforma");
        jMenuItemNuevaRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevaRefActionPerformed(evt);
            }
        });
        jMenuPrincipal.add(jMenuItemNuevaRef);

        jMenuItemSalir.setText("Salir");
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenuPrincipal.add(jMenuItemSalir);

        jMenuBar1.add(jMenuPrincipal);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelIMG)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonNuevaRef, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextFieldCod))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 999, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIMG)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonNuevaRef, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextFieldCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButtonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNuevaRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevaRefActionPerformed
        FormularioDatos formulario = new FormularioDatos(this,true);
        formulario.setVisible(true);
    }//GEN-LAST:event_jButtonNuevaRefActionPerformed

    private void jMenuItemNuevaRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevaRefActionPerformed
        FormularioDatos formulario = new FormularioDatos(this,true);
        formulario.setVisible(true);
    }//GEN-LAST:event_jMenuItemNuevaRefActionPerformed

    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemSalirActionPerformed
//Este es el sorter que nos permite filtrar los resultados por fecha:
    private void jTextFieldFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFechaActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTablePrincipal.getModel();

        if (sorter == null) {
            sorter = new TableRowSorter<>(model);
            jTablePrincipal.setRowSorter(sorter);
        }

        String textoFiltro = jTextFieldFecha.getText();

        if (textoFiltro.length() == 0) {
            sorter.setRowFilter(null);
        } else {
           
            RowFilter<DefaultTableModel, Object> filter = RowFilter.regexFilter(textoFiltro, 5);
            sorter.setRowFilter(filter);
        }
    
    }//GEN-LAST:event_jTextFieldFechaActionPerformed
//Este es el sorter que nos permite filtrar los resultados por código:
    private void jTextFieldCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodActionPerformed
      DefaultTableModel model = (DefaultTableModel) jTablePrincipal.getModel();

        if (sorter == null) {
            sorter = new TableRowSorter<>(model);
            jTablePrincipal.setRowSorter(sorter);
        }

        String textoFiltro = jTextFieldCod.getText();

        if (textoFiltro.length() == 0) {
            sorter.setRowFilter(null);
        } else {
           
            RowFilter<DefaultTableModel, Object> filter = RowFilter.regexFilter(textoFiltro, 0);
            sorter.setRowFilter(filter);
        }
    }//GEN-LAST:event_jTextFieldCodActionPerformed
//Con este botón borramos el elemento seleccionado en la tabla
    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
       DefaultTableModel model = (DefaultTableModel) jTablePrincipal.getModel();
    int selectedRow = jTablePrincipal.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona una fila para borrar.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String codigo = (String) model.getValueAt(selectedRow, 0);

    int confirmarBorrado = JOptionPane.showConfirmDialog(this, "¿Seguro que deseas borrar este registro?", "Confirmar Borrado", JOptionPane.YES_NO_OPTION);

    if (confirmarBorrado == JOptionPane.YES_OPTION) {
        String basedatos = "encargos";
        String url = "jdbc:sqlite:" + basedatos + ".db";

        try (Connection connection = DriverManager.getConnection(url)) {
            String deleteQuery = "DELETE FROM registro WHERE codigo = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(deleteQuery)) {
                preparedStatement.setString(1, codigo);
                preparedStatement.executeUpdate();
            }

            //Elimina la fila de la tabla.
            model.removeRow(selectedRow);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al borrar el registro.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    public void actualizarTabla() {
    cargarDatosDesdeBD();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Locale.setDefault(new Locale("es", "ES"));
                new FormularioPrincipal().setVisible(true);
            }
        });
    }   
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonNuevaRef;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelIMG;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemNuevaRef;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenu jMenuPrincipal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePrincipal;
    private javax.swing.JTextField jTextFieldCod;
    private javax.swing.JTextField jTextFieldFecha;
    // End of variables declaration//GEN-END:variables
}
