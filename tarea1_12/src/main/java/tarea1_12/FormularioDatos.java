/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package tarea1_12;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import org.netbeans.validation.api.builtin.stringvalidation.*;
import javax.swing.event.ChangeEvent;
import org.netbeans.validation.api.ui.ValidationGroup;

/**
 *
 * @author Sebastián Melgar Marín
 */
public class FormularioDatos extends javax.swing.JDialog {
    private FormularioPrincipal formularioPrincipal;
    /**
     * Creates new form FormularioDatos
     * @param parent
     * @param modal
     */
    
    
    
    public FormularioDatos(FormularioPrincipal parent, boolean modal) {
        super(parent, modal);
        this.formularioPrincipal = parent;
        initComponents();
        deshabilitaTodosServicios();
        jButtonGuardarRegistro.setEnabled(false);
        jSpinnerNEmpleados.setValue(0);
        jSpinnerNEmpleados.setEnabled(false);
        ValidationGroup groupCliente = validationPanelCliente.getValidationGroup();
        groupCliente.add(jTextFieldCodigo, new CODIGOValidacion());
        groupCliente.add(jTextFieldNombre, new NOMBREValidacion());
        groupCliente.add(jTextFieldApellidos, new APELLDIRValidacion());
        groupCliente.add(jTextFieldTelefono, new TELFValidacion());
        groupCliente.add(jTextFieldDireccion, new DIRECCIONValidacion());
        groupCliente.add(jFormattedTextFieldFecha, new FECHAValidacion());
        groupCliente.add(jTextFieldCoste, new COSTEValidacion());
          
        validationPanelCliente.addChangeListener((ChangeEvent e) -> {
            if (validationPanelCliente.getProblem() == null)
                jButtonGuardarRegistro.setEnabled(true);
            else
                jButtonGuardarRegistro.setEnabled(false);
        });
    }
    
private void habilitaServiciosSanitarios() {
    //Habilita los servicios de reforma de Sanitarios
    jCheckBoxAlbanileria.setEnabled(true);
    jCheckBoxFontaneria.setEnabled(true);
    jCheckBoxDecoracion.setEnabled(true);

    //Deshabilita los demás servicios
    jCheckBoxEstructura.setEnabled(false);
    jCheckBoxCimentacion.setEnabled(false);
    jCheckBoxCarpinteria.setEnabled(false);
}

private void habilitaServiciosPavimento() {
    //Habilita los servicios de reforma de Pavimento
    jCheckBoxEstructura.setEnabled(true);
    jCheckBoxCimentacion.setEnabled(true);

    //Deshabilita los demás servicios
    jCheckBoxAlbanileria.setEnabled(false);
    jCheckBoxFontaneria.setEnabled(false);
    jCheckBoxDecoracion.setEnabled(false);
    jCheckBoxCarpinteria.setEnabled(false);
}

private void habilitaServiciosIntegral() {
    //Habilita los servicios de reforma Integral (todos)
    jCheckBoxEstructura.setEnabled(true);
    jCheckBoxCimentacion.setEnabled(true);
    jCheckBoxAlbanileria.setEnabled(true);
    jCheckBoxFontaneria.setEnabled(true);
    jCheckBoxDecoracion.setEnabled(true);
    jCheckBoxCarpinteria.setEnabled(true);
}

private void deshabilitaTodosServicios() {
    //Deshabilita y desmarca todos los servicios, para reiniciar los valores al cambiar de tipo de reforma.
    
    jCheckBoxEstructura.setEnabled(false);
    jCheckBoxEstructura.setSelected(false);
    jCheckBoxCimentacion.setEnabled(false);
    jCheckBoxCimentacion.setSelected(false);
    jCheckBoxAlbanileria.setEnabled(false);
    jCheckBoxAlbanileria.setSelected(false);
    jCheckBoxFontaneria.setEnabled(false);
    jCheckBoxFontaneria.setSelected(false);
    jCheckBoxDecoracion.setEnabled(false);
    jCheckBoxDecoracion.setSelected(false);
    jCheckBoxCarpinteria.setEnabled(false);
    jCheckBoxCarpinteria.setSelected(false);
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTipo = new javax.swing.ButtonGroup();
        jLabelCodigo = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelApellidos = new javax.swing.JLabel();
        jLabelDireccion = new javax.swing.JLabel();
        jLabelTelefono = new javax.swing.JLabel();
        jLabelFecha = new javax.swing.JLabel();
        jLabelDATOSCLIENTE = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldApellidos = new javax.swing.JTextField();
        jTextFieldTelefono = new javax.swing.JTextField();
        jTextFieldDireccion = new javax.swing.JTextField();
        jLabelDATOSREFORMA = new javax.swing.JLabel();
        jLabelTipoRef = new javax.swing.JLabel();
        jRadioButtonSanitarios = new javax.swing.JRadioButton();
        jRadioButtonPavimento = new javax.swing.JRadioButton();
        jRadioButtonIntegral = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelServicios = new javax.swing.JLabel();
        jLabelEncargado = new javax.swing.JLabel();
        jComboBoxEncargado = new javax.swing.JComboBox<>();
        jLabelCoste = new javax.swing.JLabel();
        jTextFieldCoste = new javax.swing.JTextField();
        jButtonGuardarRegistro = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jSpinnerNEmpleados = new javax.swing.JSpinner();
        jLabelEmpleados = new javax.swing.JLabel();
        validationPanelCliente = new org.netbeans.validation.api.ui.swing.ValidationPanel();
        jFormattedTextFieldFecha = new javax.swing.JFormattedTextField();
        validationPanelReforma = new org.netbeans.validation.api.ui.swing.ValidationPanel();
        jCheckBoxEstructura = new javax.swing.JCheckBox();
        jCheckBoxCimentacion = new javax.swing.JCheckBox();
        jCheckBoxAlbanileria = new javax.swing.JCheckBox();
        jCheckBoxFontaneria = new javax.swing.JCheckBox();
        jCheckBoxDecoracion = new javax.swing.JCheckBox();
        jCheckBoxCarpinteria = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setResizable(false);

        jLabelCodigo.setText("Codigo");
        jLabelCodigo.setToolTipText("Código de cliente (5 cifras)");

        jLabelNombre.setText("Nombre");
        jLabelNombre.setToolTipText("Nombre del cliente");

        jLabelApellidos.setText("Apellidos");
        jLabelApellidos.setToolTipText("Apellidos del cliente");

        jLabelDireccion.setText("Dirección");
        jLabelDireccion.setToolTipText("Dirección del cliente");

        jLabelTelefono.setText("Telefono");
        jLabelTelefono.setToolTipText("Teléfono del cliente");

        jLabelFecha.setText("Fecha de alta");
        jLabelFecha.setToolTipText("Fecha de alta del cliente");

        jLabelDATOSCLIENTE.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelDATOSCLIENTE.setText("DATOS DEL CLIENTE");

        jTextFieldCodigo.setName("Código"); // NOI18N
        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });

        jTextFieldNombre.setName("Nombre"); // NOI18N
        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });

        jTextFieldApellidos.setName("Apellidos"); // NOI18N
        jTextFieldApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldApellidosActionPerformed(evt);
            }
        });

        jTextFieldTelefono.setName("Teléfono"); // NOI18N
        jTextFieldTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTelefonoActionPerformed(evt);
            }
        });

        jTextFieldDireccion.setName("Dirección"); // NOI18N
        jTextFieldDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDireccionActionPerformed(evt);
            }
        });

        jLabelDATOSREFORMA.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelDATOSREFORMA.setText("DATOS DE LA REFORMA");

        jLabelTipoRef.setText("TIPO DE REFORMA");
        jLabelTipoRef.setToolTipText("Reforma a realizar");

        buttonGroupTipo.add(jRadioButtonSanitarios);
        jRadioButtonSanitarios.setText("Sanitarios");
        jRadioButtonSanitarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSanitariosActionPerformed(evt);
            }
        });

        buttonGroupTipo.add(jRadioButtonPavimento);
        jRadioButtonPavimento.setText("Pavimento");
        jRadioButtonPavimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPavimentoActionPerformed(evt);
            }
        });

        buttonGroupTipo.add(jRadioButtonIntegral);
        jRadioButtonIntegral.setText("Integral");
        jRadioButtonIntegral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonIntegralActionPerformed(evt);
            }
        });

        jLabelServicios.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelServicios.setText("SERVICIOS:");
        jLabelServicios.setToolTipText("Servicios a contratar");

        jLabelEncargado.setText("ENCARGADO:");
        jLabelEncargado.setToolTipText("Encargado de la reforma");

        jComboBoxEncargado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empleados propios", "Autónomos", "Subcontrata" }));
        jComboBoxEncargado.setName("Tipo encargado"); // NOI18N
        jComboBoxEncargado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEncargadoActionPerformed(evt);
            }
        });

        jLabelCoste.setText("COSTE POR HORA");
        jLabelCoste.setToolTipText("Coste €/Hora");

        jTextFieldCoste.setName("Coste €/Hora"); // NOI18N
        jTextFieldCoste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCosteActionPerformed(evt);
            }
        });

        jButtonGuardarRegistro.setText("GUARDAR REGISTRO");
        jButtonGuardarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarRegistroActionPerformed(evt);
            }
        });

        jButtonSalir.setText("SALIR");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jSpinnerNEmpleados.setModel(new javax.swing.SpinnerNumberModel(2, 2, 50, 1));
        jSpinnerNEmpleados.setToolTipText("");
        jSpinnerNEmpleados.setName("Nº de empleados"); // NOI18N

        jLabelEmpleados.setText("Nº Empleados");
        jLabelEmpleados.setToolTipText("Empleados a contratar");

        jFormattedTextFieldFecha.setName("Fecha"); // NOI18N
        jFormattedTextFieldFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldFechaActionPerformed(evt);
            }
        });

        jCheckBoxEstructura.setText("Estructura");

        jCheckBoxCimentacion.setText("Cimentación");

        jCheckBoxAlbanileria.setText("Albañilería");

        jCheckBoxFontaneria.setText("Fontanería");

        jCheckBoxDecoracion.setText("Decoración");

        jCheckBoxCarpinteria.setText("Carpintería");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDireccion)
                            .addComponent(jLabelFecha))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabelServicios)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelDATOSCLIENTE)
                        .addGap(39, 39, 39)
                        .addComponent(validationPanelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelEncargado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jButtonGuardarRegistro)))
                        .addGap(41, 41, 41)
                        .addComponent(jButtonSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCoste)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldCoste, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jLabelEmpleados)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinnerNEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelDATOSREFORMA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(validationPanelReforma, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelTipoRef)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonSanitarios)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonPavimento))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxEstructura)
                                    .addComponent(jCheckBoxFontaneria))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxCimentacion)
                                    .addComponent(jCheckBoxDecoracion))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxAlbanileria)
                                    .addComponent(jCheckBoxCarpinteria))))
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonIntegral)))
                .addGap(0, 21, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelApellidos)
                    .addComponent(jLabelTelefono)
                    .addComponent(jLabelNombre)
                    .addComponent(jLabelCodigo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(jTextFieldApellidos)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDATOSCLIENTE, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validationPanelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCodigo)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombre)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelApellidos)
                    .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTelefono))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDireccion))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFecha)
                    .addComponent(jFormattedTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelDATOSREFORMA)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTipoRef)
                            .addComponent(jRadioButtonSanitarios)
                            .addComponent(jRadioButtonPavimento)
                            .addComponent(jRadioButtonIntegral))
                        .addGap(24, 24, 24)
                        .addComponent(jLabelServicios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxEstructura)
                            .addComponent(jCheckBoxCimentacion)
                            .addComponent(jCheckBoxAlbanileria))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxFontaneria)
                            .addComponent(jCheckBoxDecoracion)
                            .addComponent(jCheckBoxCarpinteria))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelEncargado)
                            .addComponent(jComboBoxEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCoste)
                            .addComponent(jTextFieldCoste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerNEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEmpleados))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonGuardarRegistro)
                            .addComponent(jButtonSalir)))
                    .addComponent(validationPanelReforma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jTextFieldTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTelefonoActionPerformed

    private void jTextFieldCosteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCosteActionPerformed
    /*Esto pasa la selección del encargado a String, para validar el coste. En caso de pulsar enter al introducir un valor superior o inferior, 
      se establece el valor mínimo o máximo por defecto, manteniendo el valor decimal usando el punto.
    */
    String selectedOption = jComboBoxEncargado.getSelectedItem().toString();
    try {
        double coste = Double.parseDouble(jTextFieldCoste.getText().replace(',', '.'));
        if (coste < 0) {
            coste = 0.00;
        } else if (selectedOption.equals("Subcontrata") && coste > 80.00) {
            coste = 80.00;
        } else if ((selectedOption.equals("Empleados propios") || selectedOption.equals("Autónomos")) && coste > 99.99) {
            coste = 99.99;
        }
        jTextFieldCoste.setText(String.format("%.2f", coste).replace(',', '.'));
    } catch (NumberFormatException e) {
        // Manejar la excepción en caso de que el usuario ingrese un valor no válido.
        jTextFieldCoste.setText("0.00");
    }
    }//GEN-LAST:event_jTextFieldCosteActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
       this.dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jRadioButtonSanitariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSanitariosActionPerformed
        deshabilitaTodosServicios();
        if (jRadioButtonSanitarios.isSelected()) {
            habilitaServiciosSanitarios();
        }
    }//GEN-LAST:event_jRadioButtonSanitariosActionPerformed

    private void jRadioButtonPavimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPavimentoActionPerformed
        deshabilitaTodosServicios();
        if (jRadioButtonPavimento.isSelected()) {
            habilitaServiciosPavimento();
        }
    }//GEN-LAST:event_jRadioButtonPavimentoActionPerformed

    private void jRadioButtonIntegralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonIntegralActionPerformed
        deshabilitaTodosServicios();
        if (jRadioButtonIntegral.isSelected()) {
            habilitaServiciosIntegral();
        }
    }//GEN-LAST:event_jRadioButtonIntegralActionPerformed
    /*Esto sirve para obtener la selección del tipo de reforma.
    */
    private String obtenerSeleccionTipo() {
    if (jRadioButtonSanitarios.isSelected()) {
        return "Sanitarios";
    } else if (jRadioButtonPavimento.isSelected()) {
        return "Pavimento";
    } else if (jRadioButtonIntegral.isSelected()) {
        return "Integral";
    } else {
        return "Ninguno seleccionado";
    }
}
    /*Esto sirve para obtener los resultados de selección de servicios de reforma, que se insertan en un ArrayList, que al final se pasa a String.
    El fin de esto, es poder insertarlo en la tabla final como String.    
    */ 
   private String obtenerSeleccionesServicios() {
    List<String> selecciones = new ArrayList<>();

    if (jCheckBoxEstructura.isSelected()) {
        selecciones.add("Estructura");
    }
    if (jCheckBoxCimentacion.isSelected()) {
        selecciones.add("Cimentación");
    }
    if (jCheckBoxAlbanileria.isSelected()) {
        selecciones.add("Albañilería");
    }
    if (jCheckBoxFontaneria.isSelected()) {
        selecciones.add("Fontanería");
    }
    if (jCheckBoxDecoracion.isSelected()) {
        selecciones.add("Decoración");
    }
    if (jCheckBoxCarpinteria.isSelected()) {
        selecciones.add("Carpintería");
    }

    if (selecciones.isEmpty()) {
        return "Ninguna selección";
    } else {
        //Convierte la lista de selecciones en un único String separado por comas y espacio
        return String.join(", ", selecciones);
    }
}
   //Esto verifica si al menos uno de los checkboxes está marcado, esto se usará en la verificación cuando se pulsa el botón guardar.
   private boolean algunCheckBoxMarcado() {
    return jCheckBoxEstructura.isSelected() ||
           jCheckBoxCimentacion.isSelected() ||
           jCheckBoxAlbanileria.isSelected() ||
           jCheckBoxFontaneria.isSelected() ||
           jCheckBoxDecoracion.isSelected() ||
           jCheckBoxCarpinteria.isSelected();
}

            
    private void jComboBoxEncargadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEncargadoActionPerformed
        jSpinnerNEmpleados.setValue(0);
        jTextFieldCoste.setText("");
        String selectedOption = jComboBoxEncargado.getSelectedItem().toString();
        if (selectedOption.equals("Empleados propios")) {
            jSpinnerNEmpleados.setEnabled(false);
        } else if (selectedOption.equals("Autónomos") || selectedOption.equals("Subcontrata")) {
            jSpinnerNEmpleados.setValue(2);
            jSpinnerNEmpleados.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBoxEncargadoActionPerformed

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodigoActionPerformed

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreActionPerformed

    private void jTextFieldApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldApellidosActionPerformed

    private void jTextFieldDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDireccionActionPerformed

    private void jFormattedTextFieldFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldFechaActionPerformed

    private void jButtonGuardarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarRegistroActionPerformed
       

    double coste = Double.parseDouble(jTextFieldCoste.getText());
    String selectedOption = jComboBoxEncargado.getSelectedItem().toString();
    String basedatos = "encargos";
    String url = "jdbc:sqlite:" + basedatos + ".db";
    
    if (!algunCheckBoxMarcado()) {
        JOptionPane.showMessageDialog(this, "Es necesario marcar un servicio", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    if (selectedOption.equals("Subcontrata") && coste > 80.00) {
        JOptionPane.showMessageDialog(this, "El precio máximo para subcontrata es de 80.00€", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    if ((selectedOption.equals("Empleados propios") || selectedOption.equals("Autónomos")) && coste > 99.99) {
        JOptionPane.showMessageDialog(this, "El precio máximo para Empleados propios y Autónomos es de 99.99€", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    //Aqui comienza el proceso de inserción de datos, primero recogemos los datos y se almacenan en un array
      try (Connection connection = DriverManager.getConnection(url)) {
       
        String seleccionTipo = obtenerSeleccionTipo();
        String seleccionServicios = obtenerSeleccionesServicios();
        int valorEmpleados = (int) jSpinnerNEmpleados.getValue();
        String[] insercion = new String[11];
        insercion[0] = jTextFieldCodigo.getText();
        insercion[1] = jTextFieldNombre.getText();
        insercion[2] = jTextFieldApellidos.getText();
        insercion[4] = jTextFieldTelefono.getText();
        insercion[3] = jTextFieldDireccion.getText();
        insercion[5] = jFormattedTextFieldFecha.getText();
        insercion[6] = seleccionTipo;
        insercion[7] = seleccionServicios;
        insercion[8] = (String) jComboBoxEncargado.getSelectedItem();
        
        if (coste < 0) {
            coste = 0.00;
        } else if (selectedOption.equals("Subcontrata") && coste > 80.00) {
            coste = 80.00;
        } else if ((selectedOption.equals("Empleados propios") || selectedOption.equals("Autónomos")) && coste > 99.99) {
            coste = 99.99;
        }
        jTextFieldCoste.setText(String.valueOf(coste));
        insercion[9] = String.valueOf(coste);
        insercion[10] = Integer.toString(valorEmpleados);

        //Si se han superado todas las validaciones anteriores, ahora se insertan los datos en la BD
        String insertQuery = "INSERT INTO registro (codigo, nombre, apellidos, telefono, direccion, fecha, tipo, servicios, encargado, coste, nempleados) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        try (PreparedStatement preparedStatement = connection.prepareStatement(insertQuery)) {
            preparedStatement.setString(1, insercion[0]);
            preparedStatement.setString(2, insercion[1]);
            preparedStatement.setString(3, insercion[2]);
            preparedStatement.setString(4, insercion[3]);
            preparedStatement.setString(5, insercion[4]);
            preparedStatement.setString(6, insercion[5]);
            preparedStatement.setString(7, insercion[6]);
            preparedStatement.setString(8, insercion[7]);
            preparedStatement.setString(9, insercion[8]);
            preparedStatement.setString(10, insercion[9]);
            preparedStatement.setString(11, insercion[10]);
            preparedStatement.executeUpdate();
            JOptionPane.showMessageDialog(this, "Registro satisfactorio", "Información", JOptionPane.INFORMATION_MESSAGE);
            formularioPrincipal.actualizarTabla();
            this.dispose();
            
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al insertar datos", "Error", JOptionPane.ERROR_MESSAGE);
    }         
    }//GEN-LAST:event_jButtonGuardarRegistroActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
             //</editor-fold>
             
        //</editor-fold>

        /* Create and display the dialog */
       java.awt.EventQueue.invokeLater(() -> {
           Locale.setDefault(new Locale("es", "ES"));
           FormularioPrincipal mainFrame = new FormularioPrincipal();
           FormularioDatos dialog = new FormularioDatos(mainFrame, true);
           dialog.addWindowListener(new java.awt.event.WindowAdapter() {
               @Override
               public void windowClosing(java.awt.event.WindowEvent e) {
                   System.exit(0);
               }
           });
           dialog.setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTipo;
    private javax.swing.JButton jButtonGuardarRegistro;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JCheckBox jCheckBoxAlbanileria;
    private javax.swing.JCheckBox jCheckBoxCarpinteria;
    private javax.swing.JCheckBox jCheckBoxCimentacion;
    private javax.swing.JCheckBox jCheckBoxDecoracion;
    private javax.swing.JCheckBox jCheckBoxEstructura;
    private javax.swing.JCheckBox jCheckBoxFontaneria;
    private javax.swing.JComboBox<String> jComboBoxEncargado;
    private javax.swing.JFormattedTextField jFormattedTextFieldFecha;
    private javax.swing.JLabel jLabelApellidos;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelCoste;
    private javax.swing.JLabel jLabelDATOSCLIENTE;
    private javax.swing.JLabel jLabelDATOSREFORMA;
    private javax.swing.JLabel jLabelDireccion;
    private javax.swing.JLabel jLabelEmpleados;
    private javax.swing.JLabel jLabelEncargado;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelServicios;
    private javax.swing.JLabel jLabelTelefono;
    private javax.swing.JLabel jLabelTipoRef;
    private javax.swing.JRadioButton jRadioButtonIntegral;
    private javax.swing.JRadioButton jRadioButtonPavimento;
    private javax.swing.JRadioButton jRadioButtonSanitarios;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinnerNEmpleados;
    private javax.swing.JTextField jTextFieldApellidos;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldCoste;
    private javax.swing.JTextField jTextFieldDireccion;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldTelefono;
    private org.netbeans.validation.api.ui.swing.ValidationPanel validationPanelCliente;
    private org.netbeans.validation.api.ui.swing.ValidationPanel validationPanelReforma;
    // End of variables declaration//GEN-END:variables
}
